Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function_definition
Rule 2     function_definition -> INT MAIN LPAREN RPAREN LBRACE statements RBRACE
Rule 3     statements -> statement
Rule 4     statements -> statements statement
Rule 5     statement -> INT ID SEMICOLON
Rule 6     statement -> INT ID LBRACKET NUMBER RBRACKET SEMICOLON
Rule 7     statement -> INT STAR ID SEMICOLON
Rule 8     statement -> INT ID ASSIGN expression SEMICOLON
Rule 9     statement -> assignable ASSIGN expression SEMICOLON
Rule 10    assignable -> ID
Rule 11    assignable -> array_access
Rule 12    assignable -> dereference_expression
Rule 13    statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE
Rule 14    statement -> RETURN expression SEMICOLON
Rule 15    statement -> COUT STREAM_OP expression SEMICOLON
Rule 16    expression -> expression PLUS expression
Rule 17    expression -> expression MINUS expression
Rule 18    expression -> expression TIMES expression
Rule 19    expression -> expression DIVIDE expression
Rule 20    expression -> NUMBER
Rule 21    expression -> ID
Rule 22    expression -> LPAREN expression RPAREN
Rule 23    array_access -> ID LBRACKET expression RBRACKET
Rule 24    address_of_expression -> AMPERSAND ID
Rule 25    dereference_expression -> STAR expression
Rule 26    expression -> address_of_expression
Rule 27    expression -> dereference_expression
Rule 28    expression -> array_access
Rule 29    condition -> expression LT expression
Rule 30    condition -> expression GT expression
Rule 31    condition -> expression LE expression
Rule 32    condition -> expression GE expression
Rule 33    condition -> expression EQ expression
Rule 34    condition -> expression NE expression

Terminals, with rules where they appear

AMPERSAND            : 24
ASSIGN               : 8 9
COUT                 : 15
DIVIDE               : 19
EQ                   : 33
GE                   : 32
GT                   : 30
ID                   : 5 6 7 8 10 21 23 24
IF                   : 13
INT                  : 2 5 6 7 8
LBRACE               : 2 13
LBRACKET             : 6 23
LE                   : 31
LPAREN               : 2 13 22
LT                   : 29
MAIN                 : 2
MINUS                : 17
NE                   : 34
NUMBER               : 6 20
PLUS                 : 16
RBRACE               : 2 13
RBRACKET             : 6 23
RETURN               : 14
RPAREN               : 2 13 22
SEMICOLON            : 5 6 7 8 9 14 15
STAR                 : 7 25
STREAM_OP            : 15
TIMES                : 18
error                : 

Nonterminals, with rules where they appear

address_of_expression : 26
array_access         : 11 28
assignable           : 9
condition            : 13
dereference_expression : 12 27
expression           : 8 9 14 15 16 16 17 17 18 18 19 19 22 23 25 29 29 30 30 31 31 32 32 33 33 34 34
function_definition  : 1
program              : 0
statement            : 3 4
statements           : 2 4 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function_definition
    (2) function_definition -> . INT MAIN LPAREN RPAREN LBRACE statements RBRACE

    INT             shift and go to state 3

    program                        shift and go to state 1
    function_definition            shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> function_definition .

    $end            reduce using rule 1 (program -> function_definition .)


state 3

    (2) function_definition -> INT . MAIN LPAREN RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 4


state 4

    (2) function_definition -> INT MAIN . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 5


state 5

    (2) function_definition -> INT MAIN LPAREN . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 6


state 6

    (2) function_definition -> INT MAIN LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 7


state 7

    (2) function_definition -> INT MAIN LPAREN RPAREN LBRACE . statements RBRACE
    (3) statements -> . statement
    (4) statements -> . statements statement
    (5) statement -> . INT ID SEMICOLON
    (6) statement -> . INT ID LBRACKET NUMBER RBRACKET SEMICOLON
    (7) statement -> . INT STAR ID SEMICOLON
    (8) statement -> . INT ID ASSIGN expression SEMICOLON
    (9) statement -> . assignable ASSIGN expression SEMICOLON
    (13) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE
    (14) statement -> . RETURN expression SEMICOLON
    (15) statement -> . COUT STREAM_OP expression SEMICOLON
    (10) assignable -> . ID
    (11) assignable -> . array_access
    (12) assignable -> . dereference_expression
    (23) array_access -> . ID LBRACKET expression RBRACKET
    (25) dereference_expression -> . STAR expression

    INT             shift and go to state 8
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    COUT            shift and go to state 16
    ID              shift and go to state 11
    STAR            shift and go to state 12

    statements                     shift and go to state 9
    statement                      shift and go to state 10
    assignable                     shift and go to state 13
    array_access                   shift and go to state 17
    dereference_expression         shift and go to state 18

state 8

    (5) statement -> INT . ID SEMICOLON
    (6) statement -> INT . ID LBRACKET NUMBER RBRACKET SEMICOLON
    (7) statement -> INT . STAR ID SEMICOLON
    (8) statement -> INT . ID ASSIGN expression SEMICOLON

    ID              shift and go to state 19
    STAR            shift and go to state 20


state 9

    (2) function_definition -> INT MAIN LPAREN RPAREN LBRACE statements . RBRACE
    (4) statements -> statements . statement
    (5) statement -> . INT ID SEMICOLON
    (6) statement -> . INT ID LBRACKET NUMBER RBRACKET SEMICOLON
    (7) statement -> . INT STAR ID SEMICOLON
    (8) statement -> . INT ID ASSIGN expression SEMICOLON
    (9) statement -> . assignable ASSIGN expression SEMICOLON
    (13) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE
    (14) statement -> . RETURN expression SEMICOLON
    (15) statement -> . COUT STREAM_OP expression SEMICOLON
    (10) assignable -> . ID
    (11) assignable -> . array_access
    (12) assignable -> . dereference_expression
    (23) array_access -> . ID LBRACKET expression RBRACKET
    (25) dereference_expression -> . STAR expression

    RBRACE          shift and go to state 21
    INT             shift and go to state 8
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    COUT            shift and go to state 16
    ID              shift and go to state 11
    STAR            shift and go to state 12

    statement                      shift and go to state 22
    assignable                     shift and go to state 13
    array_access                   shift and go to state 17
    dereference_expression         shift and go to state 18

state 10

    (3) statements -> statement .

    RBRACE          reduce using rule 3 (statements -> statement .)
    INT             reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    RETURN          reduce using rule 3 (statements -> statement .)
    COUT            reduce using rule 3 (statements -> statement .)
    ID              reduce using rule 3 (statements -> statement .)
    STAR            reduce using rule 3 (statements -> statement .)


state 11

    (10) assignable -> ID .
    (23) array_access -> ID . LBRACKET expression RBRACKET

    ASSIGN          reduce using rule 10 (assignable -> ID .)
    LBRACKET        shift and go to state 23


state 12

    (25) dereference_expression -> STAR . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 24
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 13

    (9) statement -> assignable . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 32


state 14

    (13) statement -> IF . LPAREN condition RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 33


state 15

    (14) statement -> RETURN . expression SEMICOLON
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 34
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 16

    (15) statement -> COUT . STREAM_OP expression SEMICOLON

    STREAM_OP       shift and go to state 35


state 17

    (11) assignable -> array_access .

    ASSIGN          reduce using rule 11 (assignable -> array_access .)


state 18

    (12) assignable -> dereference_expression .

    ASSIGN          reduce using rule 12 (assignable -> dereference_expression .)


state 19

    (5) statement -> INT ID . SEMICOLON
    (6) statement -> INT ID . LBRACKET NUMBER RBRACKET SEMICOLON
    (8) statement -> INT ID . ASSIGN expression SEMICOLON

    SEMICOLON       shift and go to state 36
    LBRACKET        shift and go to state 37
    ASSIGN          shift and go to state 38


state 20

    (7) statement -> INT STAR . ID SEMICOLON

    ID              shift and go to state 39


state 21

    (2) function_definition -> INT MAIN LPAREN RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 2 (function_definition -> INT MAIN LPAREN RPAREN LBRACE statements RBRACE .)


state 22

    (4) statements -> statements statement .

    RBRACE          reduce using rule 4 (statements -> statements statement .)
    INT             reduce using rule 4 (statements -> statements statement .)
    IF              reduce using rule 4 (statements -> statements statement .)
    RETURN          reduce using rule 4 (statements -> statements statement .)
    COUT            reduce using rule 4 (statements -> statements statement .)
    ID              reduce using rule 4 (statements -> statements statement .)
    STAR            reduce using rule 4 (statements -> statements statement .)


state 23

    (23) array_access -> ID LBRACKET . expression RBRACKET
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 40
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 24

    (25) dereference_expression -> STAR expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    ASSIGN          reduce using rule 25 (dereference_expression -> STAR expression .)
    PLUS            reduce using rule 25 (dereference_expression -> STAR expression .)
    MINUS           reduce using rule 25 (dereference_expression -> STAR expression .)
    TIMES           reduce using rule 25 (dereference_expression -> STAR expression .)
    DIVIDE          reduce using rule 25 (dereference_expression -> STAR expression .)
    SEMICOLON       reduce using rule 25 (dereference_expression -> STAR expression .)
    RBRACKET        reduce using rule 25 (dereference_expression -> STAR expression .)
    RPAREN          reduce using rule 25 (dereference_expression -> STAR expression .)
    LT              reduce using rule 25 (dereference_expression -> STAR expression .)
    GT              reduce using rule 25 (dereference_expression -> STAR expression .)
    LE              reduce using rule 25 (dereference_expression -> STAR expression .)
    GE              reduce using rule 25 (dereference_expression -> STAR expression .)
    EQ              reduce using rule 25 (dereference_expression -> STAR expression .)
    NE              reduce using rule 25 (dereference_expression -> STAR expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]


state 25

    (20) expression -> NUMBER .

    PLUS            reduce using rule 20 (expression -> NUMBER .)
    MINUS           reduce using rule 20 (expression -> NUMBER .)
    TIMES           reduce using rule 20 (expression -> NUMBER .)
    DIVIDE          reduce using rule 20 (expression -> NUMBER .)
    ASSIGN          reduce using rule 20 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 20 (expression -> NUMBER .)
    RBRACKET        reduce using rule 20 (expression -> NUMBER .)
    RPAREN          reduce using rule 20 (expression -> NUMBER .)
    LT              reduce using rule 20 (expression -> NUMBER .)
    GT              reduce using rule 20 (expression -> NUMBER .)
    LE              reduce using rule 20 (expression -> NUMBER .)
    GE              reduce using rule 20 (expression -> NUMBER .)
    EQ              reduce using rule 20 (expression -> NUMBER .)
    NE              reduce using rule 20 (expression -> NUMBER .)


state 26

    (21) expression -> ID .
    (23) array_access -> ID . LBRACKET expression RBRACKET

    PLUS            reduce using rule 21 (expression -> ID .)
    MINUS           reduce using rule 21 (expression -> ID .)
    TIMES           reduce using rule 21 (expression -> ID .)
    DIVIDE          reduce using rule 21 (expression -> ID .)
    ASSIGN          reduce using rule 21 (expression -> ID .)
    SEMICOLON       reduce using rule 21 (expression -> ID .)
    RBRACKET        reduce using rule 21 (expression -> ID .)
    RPAREN          reduce using rule 21 (expression -> ID .)
    LT              reduce using rule 21 (expression -> ID .)
    GT              reduce using rule 21 (expression -> ID .)
    LE              reduce using rule 21 (expression -> ID .)
    GE              reduce using rule 21 (expression -> ID .)
    EQ              reduce using rule 21 (expression -> ID .)
    NE              reduce using rule 21 (expression -> ID .)
    LBRACKET        shift and go to state 23


state 27

    (22) expression -> LPAREN . expression RPAREN
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 45
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 28

    (26) expression -> address_of_expression .

    PLUS            reduce using rule 26 (expression -> address_of_expression .)
    MINUS           reduce using rule 26 (expression -> address_of_expression .)
    TIMES           reduce using rule 26 (expression -> address_of_expression .)
    DIVIDE          reduce using rule 26 (expression -> address_of_expression .)
    ASSIGN          reduce using rule 26 (expression -> address_of_expression .)
    SEMICOLON       reduce using rule 26 (expression -> address_of_expression .)
    RBRACKET        reduce using rule 26 (expression -> address_of_expression .)
    RPAREN          reduce using rule 26 (expression -> address_of_expression .)
    LT              reduce using rule 26 (expression -> address_of_expression .)
    GT              reduce using rule 26 (expression -> address_of_expression .)
    LE              reduce using rule 26 (expression -> address_of_expression .)
    GE              reduce using rule 26 (expression -> address_of_expression .)
    EQ              reduce using rule 26 (expression -> address_of_expression .)
    NE              reduce using rule 26 (expression -> address_of_expression .)


state 29

    (27) expression -> dereference_expression .

    PLUS            reduce using rule 27 (expression -> dereference_expression .)
    MINUS           reduce using rule 27 (expression -> dereference_expression .)
    TIMES           reduce using rule 27 (expression -> dereference_expression .)
    DIVIDE          reduce using rule 27 (expression -> dereference_expression .)
    ASSIGN          reduce using rule 27 (expression -> dereference_expression .)
    SEMICOLON       reduce using rule 27 (expression -> dereference_expression .)
    RBRACKET        reduce using rule 27 (expression -> dereference_expression .)
    RPAREN          reduce using rule 27 (expression -> dereference_expression .)
    LT              reduce using rule 27 (expression -> dereference_expression .)
    GT              reduce using rule 27 (expression -> dereference_expression .)
    LE              reduce using rule 27 (expression -> dereference_expression .)
    GE              reduce using rule 27 (expression -> dereference_expression .)
    EQ              reduce using rule 27 (expression -> dereference_expression .)
    NE              reduce using rule 27 (expression -> dereference_expression .)


state 30

    (28) expression -> array_access .

    PLUS            reduce using rule 28 (expression -> array_access .)
    MINUS           reduce using rule 28 (expression -> array_access .)
    TIMES           reduce using rule 28 (expression -> array_access .)
    DIVIDE          reduce using rule 28 (expression -> array_access .)
    ASSIGN          reduce using rule 28 (expression -> array_access .)
    SEMICOLON       reduce using rule 28 (expression -> array_access .)
    RBRACKET        reduce using rule 28 (expression -> array_access .)
    RPAREN          reduce using rule 28 (expression -> array_access .)
    LT              reduce using rule 28 (expression -> array_access .)
    GT              reduce using rule 28 (expression -> array_access .)
    LE              reduce using rule 28 (expression -> array_access .)
    GE              reduce using rule 28 (expression -> array_access .)
    EQ              reduce using rule 28 (expression -> array_access .)
    NE              reduce using rule 28 (expression -> array_access .)


state 31

    (24) address_of_expression -> AMPERSAND . ID

    ID              shift and go to state 46


state 32

    (9) statement -> assignable ASSIGN . expression SEMICOLON
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 47
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 33

    (13) statement -> IF LPAREN . condition RPAREN LBRACE statements RBRACE
    (29) condition -> . expression LT expression
    (30) condition -> . expression GT expression
    (31) condition -> . expression LE expression
    (32) condition -> . expression GE expression
    (33) condition -> . expression EQ expression
    (34) condition -> . expression NE expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    condition                      shift and go to state 48
    expression                     shift and go to state 49
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 34

    (14) statement -> RETURN expression . SEMICOLON
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 50
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 35

    (15) statement -> COUT STREAM_OP . expression SEMICOLON
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 51
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 36

    (5) statement -> INT ID SEMICOLON .

    RBRACE          reduce using rule 5 (statement -> INT ID SEMICOLON .)
    INT             reduce using rule 5 (statement -> INT ID SEMICOLON .)
    IF              reduce using rule 5 (statement -> INT ID SEMICOLON .)
    RETURN          reduce using rule 5 (statement -> INT ID SEMICOLON .)
    COUT            reduce using rule 5 (statement -> INT ID SEMICOLON .)
    ID              reduce using rule 5 (statement -> INT ID SEMICOLON .)
    STAR            reduce using rule 5 (statement -> INT ID SEMICOLON .)


state 37

    (6) statement -> INT ID LBRACKET . NUMBER RBRACKET SEMICOLON

    NUMBER          shift and go to state 52


state 38

    (8) statement -> INT ID ASSIGN . expression SEMICOLON
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 53
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 39

    (7) statement -> INT STAR ID . SEMICOLON

    SEMICOLON       shift and go to state 54


state 40

    (23) array_access -> ID LBRACKET expression . RBRACKET
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    RBRACKET        shift and go to state 55
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 41

    (16) expression -> expression PLUS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 56
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 42

    (17) expression -> expression MINUS . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 57
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 43

    (18) expression -> expression TIMES . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 58
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 44

    (19) expression -> expression DIVIDE . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 59
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 45

    (22) expression -> LPAREN expression . RPAREN
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 60
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 46

    (24) address_of_expression -> AMPERSAND ID .

    PLUS            reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    MINUS           reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    TIMES           reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    DIVIDE          reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    ASSIGN          reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    SEMICOLON       reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    RBRACKET        reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    RPAREN          reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    LT              reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    GT              reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    LE              reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    GE              reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    EQ              reduce using rule 24 (address_of_expression -> AMPERSAND ID .)
    NE              reduce using rule 24 (address_of_expression -> AMPERSAND ID .)


state 47

    (9) statement -> assignable ASSIGN expression . SEMICOLON
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 61
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 48

    (13) statement -> IF LPAREN condition . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 62


state 49

    (29) condition -> expression . LT expression
    (30) condition -> expression . GT expression
    (31) condition -> expression . LE expression
    (32) condition -> expression . GE expression
    (33) condition -> expression . EQ expression
    (34) condition -> expression . NE expression
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    LT              shift and go to state 63
    GT              shift and go to state 64
    LE              shift and go to state 65
    GE              shift and go to state 66
    EQ              shift and go to state 67
    NE              shift and go to state 68
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 50

    (14) statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 14 (statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 14 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 14 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 14 (statement -> RETURN expression SEMICOLON .)
    COUT            reduce using rule 14 (statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 14 (statement -> RETURN expression SEMICOLON .)
    STAR            reduce using rule 14 (statement -> RETURN expression SEMICOLON .)


state 51

    (15) statement -> COUT STREAM_OP expression . SEMICOLON
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 69
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 52

    (6) statement -> INT ID LBRACKET NUMBER . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 70


state 53

    (8) statement -> INT ID ASSIGN expression . SEMICOLON
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 71
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 54

    (7) statement -> INT STAR ID SEMICOLON .

    RBRACE          reduce using rule 7 (statement -> INT STAR ID SEMICOLON .)
    INT             reduce using rule 7 (statement -> INT STAR ID SEMICOLON .)
    IF              reduce using rule 7 (statement -> INT STAR ID SEMICOLON .)
    RETURN          reduce using rule 7 (statement -> INT STAR ID SEMICOLON .)
    COUT            reduce using rule 7 (statement -> INT STAR ID SEMICOLON .)
    ID              reduce using rule 7 (statement -> INT STAR ID SEMICOLON .)
    STAR            reduce using rule 7 (statement -> INT STAR ID SEMICOLON .)


state 55

    (23) array_access -> ID LBRACKET expression RBRACKET .

    ASSIGN          reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 23 (array_access -> ID LBRACKET expression RBRACKET .)


state 56

    (16) expression -> expression PLUS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 16 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 16 (expression -> expression PLUS expression .)
    ASSIGN          reduce using rule 16 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 16 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 16 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 16 (expression -> expression PLUS expression .)
    LT              reduce using rule 16 (expression -> expression PLUS expression .)
    GT              reduce using rule 16 (expression -> expression PLUS expression .)
    LE              reduce using rule 16 (expression -> expression PLUS expression .)
    GE              reduce using rule 16 (expression -> expression PLUS expression .)
    EQ              reduce using rule 16 (expression -> expression PLUS expression .)
    NE              reduce using rule 16 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44

  ! TIMES           [ reduce using rule 16 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]


state 57

    (17) expression -> expression MINUS expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 17 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 17 (expression -> expression MINUS expression .)
    ASSIGN          reduce using rule 17 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 17 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 17 (expression -> expression MINUS expression .)
    LT              reduce using rule 17 (expression -> expression MINUS expression .)
    GT              reduce using rule 17 (expression -> expression MINUS expression .)
    LE              reduce using rule 17 (expression -> expression MINUS expression .)
    GE              reduce using rule 17 (expression -> expression MINUS expression .)
    EQ              reduce using rule 17 (expression -> expression MINUS expression .)
    NE              reduce using rule 17 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44

  ! TIMES           [ reduce using rule 17 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]


state 58

    (18) expression -> expression TIMES expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 18 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 18 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 18 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 18 (expression -> expression TIMES expression .)
    ASSIGN          reduce using rule 18 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 18 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 18 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 18 (expression -> expression TIMES expression .)
    LT              reduce using rule 18 (expression -> expression TIMES expression .)
    GT              reduce using rule 18 (expression -> expression TIMES expression .)
    LE              reduce using rule 18 (expression -> expression TIMES expression .)
    GE              reduce using rule 18 (expression -> expression TIMES expression .)
    EQ              reduce using rule 18 (expression -> expression TIMES expression .)
    NE              reduce using rule 18 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]


state 59

    (19) expression -> expression DIVIDE expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 19 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 19 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 19 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 19 (expression -> expression DIVIDE expression .)
    ASSIGN          reduce using rule 19 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 19 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 19 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 19 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 19 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 19 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 19 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 19 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 19 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]


state 60

    (22) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 22 (expression -> LPAREN expression RPAREN .)


state 61

    (9) statement -> assignable ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 9 (statement -> assignable ASSIGN expression SEMICOLON .)
    INT             reduce using rule 9 (statement -> assignable ASSIGN expression SEMICOLON .)
    IF              reduce using rule 9 (statement -> assignable ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 9 (statement -> assignable ASSIGN expression SEMICOLON .)
    COUT            reduce using rule 9 (statement -> assignable ASSIGN expression SEMICOLON .)
    ID              reduce using rule 9 (statement -> assignable ASSIGN expression SEMICOLON .)
    STAR            reduce using rule 9 (statement -> assignable ASSIGN expression SEMICOLON .)


state 62

    (13) statement -> IF LPAREN condition RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 72


state 63

    (29) condition -> expression LT . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 73
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 64

    (30) condition -> expression GT . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 74
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 65

    (31) condition -> expression LE . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 75
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 66

    (32) condition -> expression GE . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 76
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 67

    (33) condition -> expression EQ . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 77
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 68

    (34) condition -> expression NE . expression
    (16) expression -> . expression PLUS expression
    (17) expression -> . expression MINUS expression
    (18) expression -> . expression TIMES expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . NUMBER
    (21) expression -> . ID
    (22) expression -> . LPAREN expression RPAREN
    (26) expression -> . address_of_expression
    (27) expression -> . dereference_expression
    (28) expression -> . array_access
    (24) address_of_expression -> . AMPERSAND ID
    (25) dereference_expression -> . STAR expression
    (23) array_access -> . ID LBRACKET expression RBRACKET

    NUMBER          shift and go to state 25
    ID              shift and go to state 26
    LPAREN          shift and go to state 27
    AMPERSAND       shift and go to state 31
    STAR            shift and go to state 12

    expression                     shift and go to state 78
    address_of_expression          shift and go to state 28
    dereference_expression         shift and go to state 29
    array_access                   shift and go to state 30

state 69

    (15) statement -> COUT STREAM_OP expression SEMICOLON .

    RBRACE          reduce using rule 15 (statement -> COUT STREAM_OP expression SEMICOLON .)
    INT             reduce using rule 15 (statement -> COUT STREAM_OP expression SEMICOLON .)
    IF              reduce using rule 15 (statement -> COUT STREAM_OP expression SEMICOLON .)
    RETURN          reduce using rule 15 (statement -> COUT STREAM_OP expression SEMICOLON .)
    COUT            reduce using rule 15 (statement -> COUT STREAM_OP expression SEMICOLON .)
    ID              reduce using rule 15 (statement -> COUT STREAM_OP expression SEMICOLON .)
    STAR            reduce using rule 15 (statement -> COUT STREAM_OP expression SEMICOLON .)


state 70

    (6) statement -> INT ID LBRACKET NUMBER RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 79


state 71

    (8) statement -> INT ID ASSIGN expression SEMICOLON .

    RBRACE          reduce using rule 8 (statement -> INT ID ASSIGN expression SEMICOLON .)
    INT             reduce using rule 8 (statement -> INT ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 8 (statement -> INT ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 8 (statement -> INT ID ASSIGN expression SEMICOLON .)
    COUT            reduce using rule 8 (statement -> INT ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 8 (statement -> INT ID ASSIGN expression SEMICOLON .)
    STAR            reduce using rule 8 (statement -> INT ID ASSIGN expression SEMICOLON .)


state 72

    (13) statement -> IF LPAREN condition RPAREN LBRACE . statements RBRACE
    (3) statements -> . statement
    (4) statements -> . statements statement
    (5) statement -> . INT ID SEMICOLON
    (6) statement -> . INT ID LBRACKET NUMBER RBRACKET SEMICOLON
    (7) statement -> . INT STAR ID SEMICOLON
    (8) statement -> . INT ID ASSIGN expression SEMICOLON
    (9) statement -> . assignable ASSIGN expression SEMICOLON
    (13) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE
    (14) statement -> . RETURN expression SEMICOLON
    (15) statement -> . COUT STREAM_OP expression SEMICOLON
    (10) assignable -> . ID
    (11) assignable -> . array_access
    (12) assignable -> . dereference_expression
    (23) array_access -> . ID LBRACKET expression RBRACKET
    (25) dereference_expression -> . STAR expression

    INT             shift and go to state 8
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    COUT            shift and go to state 16
    ID              shift and go to state 11
    STAR            shift and go to state 12

    statements                     shift and go to state 80
    statement                      shift and go to state 10
    assignable                     shift and go to state 13
    array_access                   shift and go to state 17
    dereference_expression         shift and go to state 18

state 73

    (29) condition -> expression LT expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 29 (condition -> expression LT expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 74

    (30) condition -> expression GT expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 30 (condition -> expression GT expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 75

    (31) condition -> expression LE expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 31 (condition -> expression LE expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 76

    (32) condition -> expression GE expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 32 (condition -> expression GE expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 77

    (33) condition -> expression EQ expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 33 (condition -> expression EQ expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 78

    (34) condition -> expression NE expression .
    (16) expression -> expression . PLUS expression
    (17) expression -> expression . MINUS expression
    (18) expression -> expression . TIMES expression
    (19) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 34 (condition -> expression NE expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 79

    (6) statement -> INT ID LBRACKET NUMBER RBRACKET SEMICOLON .

    RBRACE          reduce using rule 6 (statement -> INT ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    INT             reduce using rule 6 (statement -> INT ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    IF              reduce using rule 6 (statement -> INT ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    RETURN          reduce using rule 6 (statement -> INT ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    COUT            reduce using rule 6 (statement -> INT ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    ID              reduce using rule 6 (statement -> INT ID LBRACKET NUMBER RBRACKET SEMICOLON .)
    STAR            reduce using rule 6 (statement -> INT ID LBRACKET NUMBER RBRACKET SEMICOLON .)


state 80

    (13) statement -> IF LPAREN condition RPAREN LBRACE statements . RBRACE
    (4) statements -> statements . statement
    (5) statement -> . INT ID SEMICOLON
    (6) statement -> . INT ID LBRACKET NUMBER RBRACKET SEMICOLON
    (7) statement -> . INT STAR ID SEMICOLON
    (8) statement -> . INT ID ASSIGN expression SEMICOLON
    (9) statement -> . assignable ASSIGN expression SEMICOLON
    (13) statement -> . IF LPAREN condition RPAREN LBRACE statements RBRACE
    (14) statement -> . RETURN expression SEMICOLON
    (15) statement -> . COUT STREAM_OP expression SEMICOLON
    (10) assignable -> . ID
    (11) assignable -> . array_access
    (12) assignable -> . dereference_expression
    (23) array_access -> . ID LBRACKET expression RBRACKET
    (25) dereference_expression -> . STAR expression

    RBRACE          shift and go to state 81
    INT             shift and go to state 8
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    COUT            shift and go to state 16
    ID              shift and go to state 11
    STAR            shift and go to state 12

    statement                      shift and go to state 22
    assignable                     shift and go to state 13
    array_access                   shift and go to state 17
    dereference_expression         shift and go to state 18

state 81

    (13) statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .

    RBRACE          reduce using rule 13 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 13 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 13 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .)
    RETURN          reduce using rule 13 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .)
    COUT            reduce using rule 13 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .)
    ID              reduce using rule 13 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .)
    STAR            reduce using rule 13 (statement -> IF LPAREN condition RPAREN LBRACE statements RBRACE .)

